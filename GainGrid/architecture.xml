<!-- 
  A single-page iOS SwiftUI app named “LocalCommitWorkoutRepo” which uses a default 
  5-day workout plan (provided below) and allows the user to log each workout as a 
  local “commit.” The app displays a GitHub-style activity graph for daily commits. 

  All data is stored locally in the device (e.g., in a file or database). 
  The user can change or extend the workout plan, but the initial default is set 
  to the plan detailed here. 
  Optimized for an LLM code-generation pipeline.
-->

<project name="LocalCommitWorkoutRepo" type="iOS-Swift" version="2.0">

  <!-- 
    1) WORKOUT PLAN (DEFAULT) 
    This Python-like dictionary is the source data for the in-app plan. 
  -->
  <defaultWorkoutPlan>
    <content><![CDATA[
{
  "Monday (Chest)": {
    "Warm-Up": "Chest Press Machine (Light) - 2 sets of 12-15 reps",
    "Workouts": [
      "Chest Press Machine: 5 sets of 4-6 reps (heavy)",
      "Incline Chest Press Machine: 4 sets of 6-8 reps",
      "Pec Deck (Chest Fly Machine): 4 sets of 10-12 reps",
      "Decline Chest Press Machine: 4 sets of 6-8 reps",
      "Cable Crossovers (High to Low): 4 sets of 10-12 reps",
      "Push-Ups (Weighted, Optional): 3 sets to failure"
    ],
    "Cardio": "15 minutes incline treadmill walk"
  },
  "Tuesday (Shoulders)": {
    "Warm-Up": "Overhead Press Machine (Light) - 2 sets of 12-15 reps",
    "Workouts": [
      "Overhead Shoulder Press Machine: 5 sets of 4-6 reps (heavy)",
      "Lateral Raise Machine: 4 sets of 12-15 reps",
      "Front Raises (Cable): 4 sets of 12-15 reps",
      "Reverse Pec Deck (Rear Delts): 4 sets of 12-15 reps",
      "Cable Upright Row: 4 sets of 8-10 reps",
      "Smith Machine Shrugs: 4 sets of 8-10 reps"
    ],
    "Cardio": "15 minutes elliptical machine"
  },
  "Wednesday (Legs)": {
    "Warm-Up": "Leg Press (Light) - 2 sets of 12-15 reps",
    "Workouts": [
      "Leg Press Machine: 5 sets of 4-6 reps (heavy)",
      "Leg Curl Machine (Hamstrings): 4 sets of 8-10 reps",
      "Leg Extension Machine (Quads): 4 sets of 8-10 reps",
      "Glute Kickback Machine: 4 sets of 10-12 reps",
      "Standing Calf Raise Machine: 4 sets of 12-15 reps",
      "Seated Calf Raise Machine: 4 sets of 12-15 reps"
    ],
    "Cardio": "15 minutes stair climber"
  },
  "Thursday (Back)": {
    "Warm-Up": "Lat Pulldown (Light) - 2 sets of 12-15 reps",
    "Workouts": [
      "Lat Pulldown Machine: 5 sets of 4-6 reps (heavy)",
      "Seated Row Machine: 4 sets of 6-8 reps",
      "Assisted Pull-Ups (Weight Stack): 4 sets of 8-10 reps",
      "Single-Arm Row (Cable): 4 sets of 8-10 reps per arm",
      "Face Pulls (Cable, Upper Back): 4 sets of 12-15 reps",
      "Reverse Pec Deck (Rear Delts): 4 sets of 12-15 reps"
    ],
    "Cardio": "15 minutes rowing machine"
  },
  "Friday (Biceps & Triceps)": {
    "Warm-Up": "Tricep Pushdowns (Light) - 2 sets of 12-15 reps",
    "Workouts": [
      "Preacher Curl Machine (Biceps): 4 sets of 8-10 reps",
      "Hammer Curl Machine (Biceps): 4 sets of 10-12 reps",
      "Cable Concentration Curls: 4 sets of 12-15 reps",
      "Tricep Pushdown (Cable): 4 sets of 8-10 reps",
      "Overhead Tricep Extension (Cable): 4 sets of 10-12 reps",
      "Dips (Machine-Assisted, Optional): 4 sets of 6-8 reps"
    ],
    "Cardio": "15 minutes jump rope or light treadmill run"
  }
}
    ]]></content>
  </defaultWorkoutPlan>

  <!-- 
    2) DESIGN NOTES 
    Dark theme with GitHub-like squares for daily commits. 
  -->
  <designNotes>
    <style>
      <backgroundColor>#0D1117</backgroundColor>
      <textColor>#C9D1D9</textColor>
      <accentGreen1>#0E4429</accentGreen1>
      <accentGreen2>#006D32</accentGreen2>
      <accentGreen3>#26A641</accentGreen3>
      <accentGreen4>#39D353</accentGreen4>
      <cornerRadius>8</cornerRadius>
      <padding>16</padding>
      <spacing>12</spacing>
      <fontFamily>System</fontFamily>
    </style>
    <userJourney>
      1) User opens app, sees default plan (Mon-Fri).  
      2) Chooses a day to log sets (including notes, reps, weights).  
      3) “Commit” button writes a local .md or record.  
      4) Activity graph shows squares for each day’s commits.  
      5) User can create extra days/weeks or modify the plan.  
    </userJourney>
  </designNotes>

  <!-- 
    3) DIRECTORY STRUCTURE 
  -->
  <directoryStructure>
    <file>LocalCommitWorkoutRepoApp.swift</file>
    <file>ContentView.swift</file>
    <file>LocalDataService.swift</file>
    <file>Info.plist</file>
    <folder name="Assets">
      <file>Assets.xcassets</file>
    </folder>
  </directoryStructure>
  
  <!-- 
    4) MODELS 
  -->
  <models>
    <model name="WorkoutSet">
      <property name="exerciseName" type="String"/>
      <property name="notes" type="String?"/>
      <property name="weight" type="String"/>
      <property name="reps" type="Int"/>
      <property name="date" type="Date"/>
    </model>
    <model name="LocalCommit">
      <property name="message" type="String"/>
      <property name="timestamp" type="Date"/>
      <property name="fileName" type="String"/>
      <property name="content" type="String"/>
    </model>
  </models>

  <!-- 
    5) SERVICE 
    - LocalDataService handles reading/writing local commits 
      and any .md files if needed. 
  -->
  <services>
    <service name="LocalDataService" file="LocalDataService.swift">
      <method name="loadAllCommits()" returns="Array<LocalCommit>"/>
      <method name="saveCommit(localCommit: LocalCommit)"/>
      <method name="generateMarkdownFromSets(sets: Array<WorkoutSet>)" returns="String"/>
    </service>
  </services>

  <!-- 
    6) SINGLE PAGE VIEW: ContentView 
    Contains sections for plan display, logging, and activity log. 
    Users can change the plan or add new days/weeks. 
  -->
  <views>
    <view name="ContentView" file="ContentView.swift">
      <sections>
        <section name="PlanSection">
          <description>
            Display the default Monday->Friday plan. 
            If user taps a day, show the relevant warm-up/workouts/cardio. 
          </description>
          <uiElements>
            <list label="Weekly Plan">
              <item>Monday (Chest)</item>
              <item>Tuesday (Shoulders)</item>
              <item>Wednesday (Legs)</item>
              <item>Thursday (Back)</item>
              <item>Friday (Biceps & Triceps)</item>
            </list>
          </uiElements>
        </section>
        
        <section name="LoggingPanelSection">
          <description>
            Let user add sets (exercise, notes, weight, reps). 
            Press “Commit” to locally store them as a .md or record. 
          </description>
          <uiElements>
            <text label="Selected Day: Monday"/>
            <textField placeholder="Exercise Name"/>
            <textField placeholder="Notes (optional)"/>
            <textField placeholder="Weight (e.g., '50 lbs')"/>
            <stepper label="Reps" minValue="1" maxValue="50"/>
            <button label="Add Set to Session"/>
            <button label="Commit Session Locally"/>
          </uiElements>
        </section>
        
        <section name="ActivityLogSection">
          <description>
            Displays a contribution graph of local commits. 
            Each square color is based on the number of commits that day. 
          </description>
          <uiElements>
            <text label="Daily Activity (Local Commits)"/>
            <scrollView orientation="horizontal">
              <grid columns="7" dynamicRows="auto">
                <!-- Dynamically filled from local commits data -->
                <square date="2025-01-01" commits="2" color="#0E4429"/>
                <square date="2025-01-02" commits="5" color="#006D32"/>
                <square date="2025-01-03" commits="1" color="#0E4429"/>
              </grid>
            </scrollView>
            <legend>
              <level color="#0D1117" range="0 commits"/>
              <level color="#0E4429" range="1-3 commits"/>
              <level color="#006D32" range="4-5 commits"/>
              <level color="#26A641" range="6-8 commits"/>
              <level color="#39D353" range="9+ commits"/>
            </legend>
          </uiElements>
        </section>
      </sections>
    </view>
  </views>

  <!-- 
    7) PSEUDO-FUNCTIONS / LOGIC 
  -->
  <pseudoFunctions>
    <function name="viewWorkoutPlan(day)">
      <description>Display warmup, workouts, cardio for the selected day from the default dictionary.</description>
    </function>
    <function name="addSet(exercise, notes, weight, reps)">
      <description>Append a set to a local array for the day’s session.</description>
    </function>
    <function name="commitSessionLocally">
      <description>
        1) Convert the day’s sets to markdown.  
        2) Create a LocalCommit with a timestamp and a fileName.  
        3) Save to local storage (LocalDataService.saveCommit).  
        4) Refresh the activity log squares.  
      </description>
    </function>
    <function name="refreshActivityLog">
      <description>
        1) loadAllCommits()  
        2) Tally commits per date  
        3) Update squares accordingly
      </description>
    </function>
  </pseudoFunctions>

  <!-- 
    8) DEPLOYMENT SETTINGS 
  -->
  <deployment>
    <platform target="iOS"/>
    <minimumOSVersion>15.0</minimumOSVersion>
    <buildSettings>
      <swiftVersion>5.7</swiftVersion>
      <signing>Automatic</signing>
    </buildSettings>
  </deployment>
</project>
